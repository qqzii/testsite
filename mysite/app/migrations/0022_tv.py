# Generated by Django 3.2.6 on 2021-08-11 11:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0021_ebook'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Цена')),
                ('market_date', models.CharField(blank=True, max_length=255, null=True, verbose_name='Дата выхода на рынок')),
                ('type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тип')),
                ('screen_diagonal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Диагональ экрана')),
                ('screen_resolution', models.CharField(blank=True, max_length=255, null=True, verbose_name='Разрешение экрана')),
                ('matrix_frequency', models.CharField(blank=True, max_length=255, null=True, verbose_name='Частота матрицы')),
                ('curved_screen', models.CharField(blank=True, max_length=255, null=True, verbose_name='Изогнутый экран')),
                ('support_3d', models.CharField(blank=True, max_length=255, null=True, verbose_name='Поддержка 3D')),
                ('image_quality_index', models.CharField(blank=True, max_length=255, null=True, verbose_name='Индекс качества изображения')),
                ('smart_tv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Smart TV')),
                ('smart_tv_platform', models.CharField(blank=True, max_length=255, null=True, verbose_name='Платформа Smart TV')),
                ('system_version', models.CharField(blank=True, max_length=255, null=True, verbose_name='Версия системы')),
                ('frameless_design', models.CharField(blank=True, max_length=255, null=True, verbose_name='Безрамочный дизайн')),
                ('body_color', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цвет корпуса')),
                ('frame_color', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цвет рамки')),
                ('stand_color', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цвет подставки')),
                ('matrix_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Тип матрицы')),
                ('color_depth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Глубина цвета')),
                ('local_dimming', models.CharField(blank=True, max_length=255, null=True, verbose_name='Локальное затемнение')),
                ('hdr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Расширенный динамический диапазон (HDR)')),
                ('extended_color_palette', models.CharField(blank=True, max_length=255, null=True, verbose_name='Расширенная цветовая палитра')),
                ('cpu', models.CharField(blank=True, max_length=255, null=True, verbose_name='Процессор')),
                ('voice_control', models.CharField(blank=True, max_length=255, null=True, verbose_name='Голосовое управление')),
                ('tv_tuner', models.CharField(blank=True, max_length=255, null=True, verbose_name='ТВ-тюнер')),
                ('subwoofer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сабвуфер')),
                ('sound_system_power', models.CharField(blank=True, max_length=255, null=True, verbose_name='Мощность звуковой системы')),
                ('hdmi_support', models.CharField(blank=True, max_length=255, null=True, verbose_name='Поддержка HDMI eARC')),
                ('bluetooth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bluetooth')),
                ('wifi', models.CharField(blank=True, max_length=255, null=True, verbose_name='Wi-Fi')),
                ('hdmi', models.CharField(blank=True, max_length=255, null=True, verbose_name='HDMI')),
                ('hdmi_version', models.CharField(blank=True, max_length=255, null=True, verbose_name='Версия HDMI')),
                ('digital_output', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цифровой выход S/PDIF')),
                ('headphone_out', models.CharField(blank=True, max_length=255, null=True, verbose_name='Выход на наушники')),
                ('usb', models.CharField(blank=True, max_length=255, null=True, verbose_name='USB')),
                ('ethernet', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ethernet')),
                ('airplay', models.CharField(blank=True, max_length=255, null=True, verbose_name='AirPlay')),
                ('smart_console', models.CharField(blank=True, max_length=255, null=True, verbose_name='Smart-пульт')),
                ('width', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ширина')),
                ('height_plus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Высота (с учетом подставки)')),
                ('depth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Глубина(с учетом подставки)')),
                ('height', models.CharField(blank=True, max_length=255, null=True, verbose_name='Высота (без подставки)')),
                ('thickness', models.CharField(blank=True, max_length=255, null=True, verbose_name='Толщина панели')),
                ('weight_plus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вес (с подставкой)')),
                ('weight', models.CharField(blank=True, max_length=255, null=True, verbose_name='Вес (без подставки)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.category', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
